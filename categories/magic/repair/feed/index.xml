<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>踩坑 &#8211; Berd&#039;s Playground (Deprecated)</title>
	<atom:link href="/categories/magic/repair/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>Won&#039;t receive any further updates.</description>
	<lastBuildDate>Tue, 29 Jun 2021 01:02:55 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.8</generator>

<image>
	<url>/wp-content/uploads/2019/05/icon.png</url>
	<title>踩坑 &#8211; Berd&#039;s Playground (Deprecated)</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>在 Windows Server 2019 中配置 PIN 并启用 Windows Hello 指纹登录</title>
		<link>/archives/windows-server-2019-setup-pin-and-biometric-login/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Tue, 13 Apr 2021 14:47:20 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[Biometric]]></category>
		<category><![CDATA[Fingerprint]]></category>
		<category><![CDATA[Windows]]></category>
		<guid isPermaLink="false">/?p=907</guid>

					<description><![CDATA[0x00 前言 放在宿舍的计算机经常需要锁定和解锁，但这就带来了一些问题：一是反复输入长密码非常累人，二是可能产生潜在的安全隐患。 如果我们能通过指纹登录，上述问题就迎刃而解了。但是当我尝试添加指纹的时候却发现 Windows 不让我这么做： 我相信即使是猴子也可以在 Google 上找到一堆解决方案，但是你基本不可能找到一个真正有用的方案（这篇文章不包含在内 ）。因为那些方案针对的问题根源和我们现在碰到的不同。Microsoft 把 Windows Server 的 Windows Hello 功能砍了一部分，并且要求我们 配置 Windows Hello for Business 来实现 PIN 和生物特征登录。 如果你已经配好了一套完整的 AD，也许上面的链接对你帮助更大。但是我并不想配置或加入域，因此这篇博客将记录一个另辟蹊径配置 Windows Hello 指纹登录的方法。 0x01 问题溯源 首先，我们现在看到最直接的现象就是两个灰色按钮点不了，让我们先打开 The Inspect 看看这两个按钮的相关属性： 很明显，IsEnabled: false 表示这个按钮被禁用了（这不是重点），我们关注的是下面的 AutomationId: "CAddPinSetting_AddPinButton"，这个 ID 有助于在后面逆向时快速定位到逻辑。 你问为什么我不看添加指纹按钮？因为添加指纹实际上是可以通过调用 Windows Biometric Framework API 往 System Pool 里注册一个指纹完成的，这个框架没有被 MS 砍掉（因为 WH [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>在 Microsoft Edge 中安装第三方扩展的正确姿势</title>
		<link>/archives/microsoft-edge-install-third-party-extensions/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Sat, 30 Jan 2021 13:58:50 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[Chrome]]></category>
		<category><![CDATA[Edge]]></category>
		<guid isPermaLink="false">/?p=893</guid>

					<description><![CDATA[0x00 前言 最近从 Chromium-EyeProtect 迁移到了 Microsoft Edge, 不过我以前一直通过开发者模式加载的一些扩展又使得 Edge 在启动时弹出了 这篇博客 中提到的禁用提示 这个提示在 Chromium 下可以通过安装一个开发者 APP 来解决，但在 Edge 上无法安装这个 APP 此外，如果我尝试打包扩展后直接加载，依然会造成扩展无法启用，这篇博客简单的记录了我解决这个问题的方法 0x01 打包扩展 首先在 edge://extensions/ 页面启用左下角的开发人员模式，随后点击右上角的 打包扩展 按钮打包获得一个 crx 文件 把这个 crx 文件直接拖进扩展页面并安装，找到安装后的扩展，记录下这里的 ID 0x02 获取并安装 ADMX 管理模板 管理模板只需要安装一次，如果你以前安装过可以直接跳过这一步 现在，转到 Microsoft Edge Business 下载页面，选中你当前使用的 Version、Build 后点击 GET POLICY FILES 按钮下载对应的策略包 注意你并不需要在这个页面下载 Edge，只要 Version 和 Build [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Intel NUC I210 网卡 WOL 唤醒的一个坑</title>
		<link>/archives/intel-nuc-i210-wol-troubleshooting/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Sat, 05 Dec 2020 10:21:35 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[I210]]></category>
		<category><![CDATA[Intel]]></category>
		<category><![CDATA[NUC]]></category>
		<category><![CDATA[Troubleshoot]]></category>
		<category><![CDATA[WOL]]></category>
		<guid isPermaLink="false">/?p=863</guid>

					<description><![CDATA[今天在写 WOL 文档的时候准备自己测试一下，结果却发现我的 NUC 两个网卡只有 I219-LM 可以正常唤醒，I210 一直没有响应我的唤醒请求 我从来不是“能用就行”的性格，所以深入研究了一下，发现这种双网卡主板的配置实际可能存在需要注意的坑，在这里记录一下 0x01 Troubleshoot 最基本的 Troubleshoot 无非就是 BIOS 中是否开启了唤醒、网卡是否开启了 WOL、网线是没有插上等等，在此就不赘述了，不过我检查后面网线的连接性的时候发现了一个有意思的事情 当我把网线插到 NUC 关机状态下的 LAN1 (I219-LM) 的时候，网口的一个小绿灯会以 1HZ 左右的频率进行闪烁，而当我插到上面的 LAN2 (I210) 的时候，网口并没有任何反应 这很容易推断出可能是上面的网卡电源被切断了，在双网卡主板上这么设计是挺合理的，然而我在 BIOS 里翻了一圈并没有找到任何网卡电源配置，问题一度陷入僵局.jpg 0x02 Solution 搜索了一部分资料后，我发现部分 Linux 用户也碰到了类似的问题，而且可以通过软件上的设置来解决 于是我就去找了下 Intel 的网卡驱动配置文档，发现安装 PROSet 驱动包后会有一个单独的管理程序 Intel PROSet Adapter Configuration Utility 然后重点来了，这个程序中会列出我们在 devmgmt.msc 中看不到的一部分设置，其中就包括 &#8220;电源关闭状态下魔包唤醒&#8221;，这个值在 I210 上默认是禁用，而在 I219 上默认是启用的 如图，devmgmt.msc [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Windows 运行 一些有趣的语法</title>
		<link>/archives/windows-run-interesting-syntax/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Mon, 02 Mar 2020 03:41:23 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[Explorer]]></category>
		<category><![CDATA[Windows]]></category>
		<guid isPermaLink="false">/?p=682</guid>

					<description><![CDATA[0x00 前言 Windows Explorer 中有一个很实用的小工具 &#8220;运行&#8221; , 您可以用 Win+R 快捷键呼出这个小工具. 这个常用的小工具并不只是单纯的 &#8220;执行一个可执行程序&#8221;, 它其实有很多额外的功能. 通过这个工具执行命令与在任意资源管理器窗口的地址栏中输入命令是完全等价的, 本文就探讨一下这个小工具(地址栏)可用的一些语法. 由于网上很难找到资料, 本文无法涵盖所有可用的语法. 如果您了解更多有意思的语法欢迎与我交流. 0x01 执行一个可执行程序 首先自然要说我们最常用的运行方式了, 直接输入一个可执行程序的名称, 系统会根据环境变量搜寻并启动它. 当然您也可以输入绝对路径. 0x02 打开一个路径 由于使用运行和在资源管理器地址栏中进行输入一样, 如果您输入一个目录 (如 C:\Windows) 就会唤起一个新的资源管理器窗口指向您指定的路径. 当然, 您也可以打开所谓的 &#8220;网络路径&#8221;, 如 \\233.233.233.233. 0x03 打开一个URL 由于我对 Windows 处理 URL 的机制不了解, 这里只能讨论我观察到的现象. 在运行中输入一个 URL 将唤起对应 Scheme 的程序进行处理. 如 https:// 通常会唤起默认浏览器, 而 steam:// 会唤起 [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>解决新版 Chromium 绕过LSP代理软件(如 Proxifier)</title>
		<link>/archives/get-rid-of-chromium-lsp-bypass/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Fri, 04 Oct 2019 12:45:06 +0000</pubDate>
				<category><![CDATA[失效/过期]]></category>
		<category><![CDATA[踩坑]]></category>
		<category><![CDATA[迷の代码]]></category>
		<category><![CDATA[C++]]></category>
		<category><![CDATA[Chrome]]></category>
		<guid isPermaLink="false">/?p=355</guid>

					<description><![CDATA[0x00 前言 Proxifier 新版已升级到 WFP 框架进行代理，本文已过期 本文为流水账形式, 查看解决方案请 点这里 时间过的真快呢, 不知不觉高考完的第一个国庆就来了. 有了5天的长假, 我又想起来 Chromium-EyeProtect 更新的事情了(上次更新是四个月前, 看到 README.md 的图了么).不过, 用几天完成更新赶上最新的 v77.0.3865.90 (Stable) 后却出现了我意料之外的情况&#8230; Proxifier 居然不能正常代理 Chromium 的流量了. 具体表现是连 Verbose Log 都无法看到任何关于 chrome.exe 的信息, 就像 Chromium 直接绕过了 LSP 去访问互联网一样&#8230; 排除 Proxifier 的问题后, 我还是不太甘心就这样放弃掉 Proxifier, 于是就有了下面这一堆踩坑和这篇 Blog . 0x01 初步分析 查了部分 LSP 的资料后, 我的第一感觉是 Chromium 在创建 Socket 的时候是不是加了什么大魔法, [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>在 Windows 中创建恢复分区</title>
		<link>/archives/windows-create-recovery-partition/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Thu, 08 Aug 2019 06:33:16 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[DISM]]></category>
		<category><![CDATA[Windows]]></category>
		<guid isPermaLink="false">/?p=337</guid>

					<description><![CDATA[0x00 前言 本来这些东西都是系统自己管理的&#8230;结果一顿神奇操作后 Windows 把我系统盘上的分区弄的乱七八糟,只好删掉恢复分区重新建立. 这里记录一下完整的建立过程. 0x01 创建分区 一般我习惯将 Recovery 分区放在硬盘末尾, 这里直接用 DiskGenius 建立便于精确的指定位置和大小. 当然你也可以用 diskmgmt.msc 或者 diskpart 来操作, 由于这里由于需要把ESP(EFI)分区挪一挪防止出现空隙, 直接选择 DiskGenius 比较方便. 在 Windows Server 2012 下, winre.wim 的大小一般不会超过 300MB , 所以这里只需要建立一个 400MB 的恢复分区就完全够用. 首先计算出ESP分区、Recovery分区占用的扇区数量, 由于当前硬盘扇区大小是 512Bytes, 100MB的ESP分区就需要 100*1024*1024/512=204800 个扇区, 同理Recovery分区占用 400*1024*1024/512=819200 个扇区. 然后用磁盘总扇区数量减去两个分区扇区数量得到ESP分区的起始位置 1000215216-204800-819200=999191216, 由于这里需要对齐到2048个扇区, 所以还需要稍做调整, 后部空间也不会是整整的400M. 这里就不具体写计算过程了. 然后建立一个新的NTFS分区, Recovery分区应该是没有卷标的所以留空即可. 这里将新建的分区设置盘符为 L: 0x02 [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Chromium-EyeProtect: 珍爱眼睛,远离 Google Design</title>
		<link>/archives/chromium-eyeprotect/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Sat, 04 May 2019 04:38:05 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[迷の代码]]></category>
		<category><![CDATA[C++]]></category>
		<category><![CDATA[Chrome]]></category>
		<guid isPermaLink="false">/?p=325</guid>

					<description><![CDATA[0x00 前言 印象中Chrome一直是很不错的一款浏览器,但随着Google的变化它的功能和UI也不再那么单纯. 从v69开始,Google将默认的Chrome UI改成了Material Refresh, 随后在v71的某个stable release中彻底删掉了用户回滚传统UI的选项. 对大部分用户而言, UI的变更可能根本不是值得在意的事情, 甚至可能有的用户没有注意到UI的变化. 但我是很难接受这个(个人感觉)效率极低而且很丑的UI的, 因此就有了自己修改一个Chromium的想法. * 此页面中部分内容可能已经过时, 请以 GitHub 上最新的 Patch 为准. 如果您想就UI是否好看和我讲道理或者把我批判一番, 建议立刻关闭此页面. FENGberd 不要问我图为什么都是糊的, 你得问 Snipaste&#8230;截图质量已经设为100了而且上传都没有压缩 :/ 0x01 获取代码 获取代码并编译的内容已迁移至 下载源码 &#38; 编译Chromium , 本文只介绍对Chromium进行的修改 0x02 开始修改 此处的修改说明是针对 74.0.3729.108(Stable) EyeProtect-v1.0.1 进行的 注意: 本项目中几乎所有绘制/样式相关的代码都来自v69的Chromium, 这些代码的版权都属于它们的原作者 0001. 添加Flags 为了让用户能方便的开启/关闭Eye-Protect功能, 同时也是为了保证EP出现问题时可以Fallback到原版UI而不需要去安装其他浏览器, 我们在 chrome://flags 里添加一个Flag来控制Eye-Protect功能. 首先我们来到 flag-metadata.json 并添加自己的Flag定义以便编译器能识别这个Flag 然后在 [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>FFmpeg 推送直播流的那些坑</title>
		<link>/archives/ffmpeg-streaming-problems/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Fri, 06 Oct 2017 07:42:11 +0000</pubDate>
				<category><![CDATA[踩坑]]></category>
		<category><![CDATA[ffmpeg]]></category>
		<guid isPermaLink="false">/?p=160</guid>

					<description><![CDATA[好久没写博客服务器都快长草了&#8230;今天来除除草 昨天在某大佬群里看到一个需求:将一张静态图片和一个音频文件转为FLV格式的直播流并推送到RTMP服务器 乍一看这似乎是一个非常简单的需求,一个命令搞定嘛,大佬跟我说搞了一个国庆我一开始是不信的 当时我想到的就是简单的一个命令搞定:ffmpeg -i Audio.wav -loop 1 -i Image.jpg -c:a aac -b:a 1400k -ar 44800 -c:v libx264 -f flv rtmp://YOURADDRESS 但是在实际测试过程中,这个命令推送出去的流会出现无法播放的情况,具体表现为直播服务连接正常,但如图中所示视频完全无法播放而且显示离线(我使用twich调试时控制台输出m3u8文件不存在,现在看来应该是视频流有问题导致后端转码服务器无法正常解析并生成m3u8) 经过多次排查,如果使用ffmpeg直接推送一个正常的flv文件就不会出这个问题,可以正常播放.而如果使用ffmpeg合并图片+音频为flv然后推送就会出错[值得一提的是,我使用的图片尺寸是1300&#215;865,这个尺寸如果直接转为YUV420是不被支持的(宽不能被2整除),猜测ffmpeg自动使用了YUV444格式,由于一些我不知道的原因,推送YUV444流就会出现这些奇怪的问题],twich提示我&#8221;关键帧距离过长&#8221;. 当我尝试在Google上找到答案时&#8230;发现那些问题/博客基本都是2012,2013年左右的东西,一些选项甚至已经被ffmpeg给弃用了(比如-g) 这就非常尴尬 折腾了两小时(包括尝试固定帧率,随便加/删两个文档中的选项试试)后,我发现如果强制视频使用YUV420的格式推送就不会出现这个问题,但由于YUV420需要长宽能被2整除,我们可以用scale参数进行缩放:-vf realtime,scale=1300x866,format=yuv420p 加上这个命令后,播放倒是正常了,但却没有图像,只有一片黑+声音 经过输出为flv查看信息,发现这个视频只有1FPS&#8230;问题就在这,于是我尝试加上-r 30强制帧率[一些帖子说需要使用-framerate参数,但这是一个input参数而且是针对image2库来说的,我现在需要修改的是output],加了这个参数后却又出现了上面的问题 又折腾了半天,终于在StackOverflow上找到一个设置libx264关键帧的方法(-g已经被废弃了),参考&#160;What is the CORRECT way to fix keyframes in FFMPEG for DASH?我使用的是这个参数:-c:v libx264 -x264-params keyint=60 工作正常,目前没发现问题 将上面各个参数合并,最终我用下面的命令解决了这个问题&#8230; ffmpeg -y -loop 1 -i Image.jpg -i Audio.wav [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>在 Chrome 中加载企业支付宝的数字证书</title>
		<link>/archives/load-alipay-cert-in-chrome/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Fri, 10 Feb 2017 05:48:16 +0000</pubDate>
				<category><![CDATA[失效/过期]]></category>
		<category><![CDATA[踩坑]]></category>
		<category><![CDATA[迷の代码]]></category>
		<category><![CDATA[Chrome]]></category>
		<guid isPermaLink="false">/?p=121</guid>

					<description><![CDATA[我们都知道,支付宝是一个商业公司,Google是一个科技公司 ** 2019年以来,Google连Do no stupid都做不到, 根本不是以前的Do no evil. 上面那句话仅针对Do no evil的Google 🙂 当支付宝开发跟不上Chrome的进步速度时就会出现&#8221;当前操作环境不支持支付宝控件&#8221;这种尴尬的情况(国内大部分银行也这样- -): 如果你一路点进帮助中心,就会发现官方说法中数字证书是不支持Chrome甚至不支持IE11的 本文提供一种方式,让Chrome强行安装数字证书并正常使用(仅在x86机器上测试,x64不确定)首先,通过User-Agent修改插件将UA修改为IE10 刷新即可看到提示安装数字证书控件的页面 点击后下载并安装支付宝数字证书控件,然后重启浏览器(图略)接下来再次回到此页面(别忘了打开UA修改)就可以正常进行证书安装了(依然没图)需要注意的是提示是否进行证书安装那个对话框好像会跑到Chrome下面,注意看着点任务栏,不然还以为一直卡在安装上&#8230; 安装成功后,别急着兴奋,现在数字证书可以正常用一段时间,但你重启浏览器后就会出现无法检测到数字证书的情况,而手动点进管理页面后就会提示已安装数字证书然后证书又可以用了&#8230; 我们总不可能每次都点进这个页面一次吧 &#8211; -那样很累的 因此我写了这个插件:AlipayHelper.zip zip中包含了打包好的crx文件和源码,如果碰到提示&#8221;无法添加来自此网站的应用,程序和用户脚本&#8221;可以尝试直接将扩展程序拖到 chrome://extensions 这个界面,新版Chrome中加载插件后无法启用的解决方案可以参考 这篇博客 ,加载完毕后退出支付宝并重新登录应该就可以正常使用了 插件原理:首先这个插件注册了一个onBeforeRequest的Listener来拦截跳转到&#160;https://authzth.alipay.com/login/certCheck.htm?goto=(这里是目标地址) 的请求,通过这个请求得到下一步跳转的目标地址(从goto=这里用正则表达式匹配) chrome.webRequest.onBeforeRequest.addListener(function(request) { if(request.method=='GET') // 支付宝对这个URL的操作有两步,第一步带着goto=进行GET请求,下一步由GET得到的页面进行POST请求 { var match=request.url.match(/(^&#124;\?&#124;&#38;)goto=([^&#38;]*)(&#38;&#124;$)/); // 正则匹配 if(match) { jump_url=unescape(match[2]); // 设置要拦截的地址 } } }, { urls: [ 'https://authzth.alipay.com/login/certCheck.htm*' ] },['blocking']); 接下来在另一个Listener里拦截目标地址 [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>给 Chrome 添加非应用商店扩展程序的正确姿势</title>
		<link>/archives/add-third-app-to-chrome/</link>
		
		<dc:creator><![CDATA[FENGberd]]></dc:creator>
		<pubDate>Sun, 22 Jan 2017 08:37:06 +0000</pubDate>
				<category><![CDATA[失效/过期]]></category>
		<category><![CDATA[踩坑]]></category>
		<category><![CDATA[Chrome]]></category>
		<guid isPermaLink="false">/?p=104</guid>

					<description><![CDATA[从2018年(具体Chrome版本未知)开始此方法已失效,即使添加了信任安装源也无法正常启用拓展. 请参阅 这篇博客 获取在 2021 年 (v77+) 有效的方法. 从Chrome 30+开始,非应用商店的拓展就无法正常启用了,比如 那么,如何正确的启用这些拓展呢? Google Support给出了一个方案: 如果需要使用某个已停用的扩展程序，您可以联系该扩展程序的开发者，让他们将该扩展程序上传到 Chrome 网上应用店。这样，您和其他 Chrome 用户便可通过 Chrome 网上应用店来安装该扩展程序；或者，如果您已经安装了该扩展程序，则可手动从您的扩展程序列表中重新启用它。 Google Support 很显然这个方法不是很好用, 如果修改了别人的拓展, 更是不可能(也不应该)挂到应用商店去. 但也不是完全没有办法,可以通过在Chrome的应用白名单里添加appid实现此目的 首先,通过 这篇帮助文档&#160;我们可以找到&#160;Chrome管理模板的下载地址 下载后,在windows\adm\系统语言(其他语言也可以,不过可能会存在编码问题/和系统整体风格对不上之类的问题) 这个文件夹内找到对应的管理模板 将chrome.adm解压到任意位置,打开组策略(gpedit.msc,没有的话自己想办法解决咯)并右键点击计算机配置-&#62;管理模板一项并选择[添加/删除模板] 在新窗口中选择添加一项,找到刚才解压出来的chrome.adm并添加进去 添加成功后应该是这个样子的 此时就可以关闭窗口并删掉adm文件了(注:此处如果组策略管理器卡住未响应,可以强制关闭并重新打开,模板应该已经添加好了) 接下来找到 经典管理模板(ADM)\Google\Google Chrome\扩展程序 文件夹中的 &#8220;配置扩展程序安装白名单&#8221; 双击此项,选择&#8221;已启用&#8221;并点击&#8221;显示&#8230;&#8221; 接下来在 扩展程序管理页面 (chrome://extensions/) 中找到你要添加的应用ID 将此应用ID复制到刚才打开的&#8221;显示内容&#8221;对话框里并点击确定 然后关掉组策略配置,刷新扩展管理页面即可启用第三方应用 话说Chrome很多地方是为大部分用户着想的,但对喜欢折腾的developers来说好像有点不太友好]]></description>
		
		
		
			</item>
	</channel>
</rss>
